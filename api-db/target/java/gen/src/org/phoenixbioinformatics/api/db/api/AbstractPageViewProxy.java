/**
 * Copyright 2011 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractDbDtoProxy.vsl

package org.phoenixbioinformatics.api.db.api;


import com.poesys.db.dto.AbstractLazyLoadingDtoProxy;


/**
 * <p>
 * A data-access layer data-transfer object (DTO) lazy-loading proxy for the 
 * PageView. This class is an abstract class that contains AndroMDA 
 * generated code; change nothing in this class. Instead, override any methods 
 * in the concrete subclass generated in the same package. AndroMDA will 
 * overwrite this class each time you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * A single access of a URI for a given IP address at a given date and time; may be
 * part of a session if it has a session id
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractPageViewProxy extends AbstractLazyLoadingDtoProxy implements IPageView {
  /** Default serial version UID for the Serializable DTO */
  private static final long serialVersionUID = 1L;

  // Lazy-loading query setter strategy nested classes for single-object associations
  
  /**
   * Create a PageViewProxy. The concrete subclass must call this constructor.
   *
   * @param dto the DTO to proxy
   */
  public AbstractPageViewProxy(PageView dto) {
    super(dto);

    // Setter arrays
    readObjectSetters = new java.util.concurrent.CopyOnWriteArrayList<com.poesys.db.dto.ISet>();
  }

  @Override
  public boolean equals(Object obj) {
    AbstractPageViewProxy otherProxy = (AbstractPageViewProxy)obj;
    return ((PageView)dto).equals(otherProxy.dto);
  }

  @Override
  public int hashCode() {
    return ((PageView)dto).hashCode();
  }

  // Local properties (attributes, associations, and association classes)

  /**
   * Get an object of java.math.BigInteger
   *
   * Source: AddGeneratedKeyProperties
   * Lazy: false
   * 
   * @return a java.math.BigInteger
   */
  public java.math.BigInteger getPageViewId() {
    return ((PageView)dto).getPageViewId();
  }

  /**
   * Get an object of java.sql.Timestamp
   *
   * Source: AddLocalAttributeProperties
   * Lazy: false
   * 
   * @return a java.sql.Timestamp
   */
  public java.sql.Timestamp getPageViewDate() {
    return ((PageView)dto).getPageViewDate();
  }

  public void setPageViewDate(java.sql.Timestamp pageViewDate)
      throws com.poesys.db.InvalidParametersException {
    ((PageView)dto).setPageViewDate(pageViewDate);
  }

  /**
   * Get an object of java.lang.String
   *
   * Source: AddLocalAttributeProperties
   * Lazy: false
   * 
   * @return a java.lang.String
   */
  public java.lang.String getUri() {
    return ((PageView)dto).getUri();
  }

  public void setUri(java.lang.String uri)
      throws com.poesys.db.InvalidParametersException {
    ((PageView)dto).setUri(uri);
  }

  /**
   * Get an object of java.lang.String
   *
   * Source: AddLocalAttributeProperties
   * Lazy: false
   * 
   * @return a java.lang.String
   */
  public java.lang.String getIp() {
    return ((PageView)dto).getIp();
  }

  public void setIp(java.lang.String ip)
      throws com.poesys.db.InvalidParametersException {
    ((PageView)dto).setIp(ip);
  }

  /**
   * Get an object of java.lang.String
   *
   * Source: AddLocalAttributeProperties
   * Lazy: false
   * 
   * @return a java.lang.String
   */
  public java.lang.String getSessionId() {
    return ((PageView)dto).getSessionId();
  }

  public void setSessionId(java.lang.String sessionId)
      throws com.poesys.db.InvalidParametersException {
    ((PageView)dto).setSessionId(sessionId);
  }

  /**
   * Get an object of org.phoenixbioinformatics.api.db.api.IParty
   *
   * Source: AddToOneAssociationOptionalObjectProperties
   * Lazy: false
   * 
   * @return a org.phoenixbioinformatics.api.db.api.IParty
   */
  public org.phoenixbioinformatics.api.db.api.IParty getParty() {
    return ((PageView)dto).getParty();
  }

  public void setParty(org.phoenixbioinformatics.api.db.api.IParty party)
      {
    ((PageView)dto).setParty(party);
  }

  /**
   * Get an object of java.math.BigInteger
   *
   * Source: AddGeneratedKeyProperties + AddToOneAssociationAttributeProperties
   * Lazy: false
   * 
   * @return a java.math.BigInteger
   */
  public java.math.BigInteger getPartyId() {
    return ((PageView)dto).getPartyId();
  }

  public void markChildrenDeleted() throws com.poesys.db.dto.DtoStatusException {
  	((PageView)dto).markChildrenDeleted();
  }
}