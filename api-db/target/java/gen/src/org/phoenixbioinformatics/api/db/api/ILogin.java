/**
 * Copyright 2011 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: IDbDto.vsl

package org.phoenixbioinformatics.api.db.api;

import com.poesys.db.dto.IDbDto;

import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;


/**
 * <p>
 * A data-access layer data-transfer-object interface for the Login. 
 * The data-transfer-object class and proxy class implement this interface, as
 * does the business-layer data-transfer-object class.
 * </p>
 * <p>
 * the username and password that correspond to a party and partner; the system
 * verifies the identity of the party by comparison of the password given the
 * username; note that the name changed from "User" because that was an Oracle
 * keyword
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>CompositeKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public interface ILogin extends IDbDto {

  boolean equals(Object arg0);

  int hashCode();

  /**
   * <p>
   * Mark any children of this DTO as deleted.
   * </p>
   *
   * @throws DtoStatusException when the child cannot be set to DELETED status
   */
  void markChildrenDeleted() throws DtoStatusException;

  IPrimaryKey getPrimaryKey();
  

  /**
   * <p>
   * Composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddParentKeyAttributes
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: ${property.prefix}
   * </p>
   * @return a java.math.BigInteger partyId
   */
  public java.math.BigInteger getPartyId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not true
// Read/Write property: false

  /**
   * <p>
   * the unique, case-insensitive username for a party
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: username
   * </p>
   * @return a java.lang.String username
   */
  public java.lang.String getUsername();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the password that authenticates the user/party
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: password
   * </p>
   * @return a java.lang.String password
   */
  public java.lang.String getPassword();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the password.
   * </p>
   *
   * @param password the value to set into the password
   * @throws com.poesys.db.InvalidParametersException when the password 
   *       value is null
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setPassword(java.lang.String password) throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException;


  /**
   * <p>
   * the party's email address
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: email
   * </p>
   * @return a java.lang.String email
   */
  public java.lang.String getEmail();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the email.
   * </p>
   *
   * @param email the value to set into the email
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setEmail(java.lang.String email) throws com.poesys.db.dto.DtoStatusException;


  /**
   * <p>
   * the name of the organization to which the party belongs, such as a company or
   * university name
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: institution
   * </p>
   * @return a java.lang.String institution
   */
  public java.lang.String getInstitution();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the institution.
   * </p>
   *
   * @param institution the value to set into the institution
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setInstitution(java.lang.String institution) throws com.poesys.db.dto.DtoStatusException;


  /**
   * <p>
   * a partner-specific identifier for the user, represented as a string (such as the
   * TAIR community id); used by the partner to identify the user
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: userIdentifier
   * </p>
   * @return a java.lang.String userIdentifier
   */
  public java.lang.String getUserIdentifier();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the userIdentifier.
   * </p>
   *
   * @param userIdentifier the value to set into the userIdentifier
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setUserIdentifier(java.lang.String userIdentifier) throws com.poesys.db.dto.DtoStatusException;


  /**
   * <p>
   * the partner against which to authenticate with the login information
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties
   * Owning DTO: Partner
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: partner
   * </p>
   * @return a org.phoenixbioinformatics.api.db.api.IPartner partner
   */
  public org.phoenixbioinformatics.api.db.api.IPartner getPartner();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the partner.
   * </p>
   *
   * @param partner the value to set into the partner
   * @throws com.poesys.db.InvalidParametersException when the partner 
   *       value is null
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setPartner(org.phoenixbioinformatics.api.db.api.IPartner partner) throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException;


  /**
   * <p>
   * the party that owns a login
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties
   * Owning DTO: Party
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: party
   * </p>
   * @return a org.phoenixbioinformatics.api.db.api.IParty party
   */
  public org.phoenixbioinformatics.api.db.api.IParty getParty();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the party.
   * </p>
   *
   * @param party the value to set into the party
   * @throws com.poesys.db.InvalidParametersException when the party 
   *       value is null
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setParty(org.phoenixbioinformatics.api.db.api.IParty party) throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException;


  /**
   * <p>
   * Foreign key used by setter to query associated object
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddToOneAssociationAttributeProperties
   * Owning DTO: Partner
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: partner
   * </p>
   * @return a java.lang.String partnerId
   */
  public java.lang.String getPartnerId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false
}