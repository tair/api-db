/**
 * Copyright 2011 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package org.phoenixbioinformatics.api.bs.api;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import org.phoenixbioinformatics.api.db.api.ISubscriptionDescriptionItem;
import org.phoenixbioinformatics.api.db.api.SubscriptionDescriptionItemProxy;
import org.phoenixbioinformatics.api.db.api.SubscriptionDescriptionItem;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the SubscriptionDescriptionItem. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * A specific item of descriptive text
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>CompositeKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsSubscriptionDescriptionItem 
    extends AbstractDto<org.phoenixbioinformatics.api.db.api.ISubscriptionDescriptionItem> {

  /**
   * Create a BsSubscriptionDescriptionItem object from a SubscriptionDescriptionItem object.
   * 
   * @param dto the data-access layer SubscriptionDescriptionItem DTO
   * @throws DelegateException when there is a problem creating the SubscriptionDescriptionItem
   */
  public AbstractBsSubscriptionDescriptionItem(ISubscriptionDescriptionItem dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a SubscriptionDescriptionItem from new data.
   *
   * @param key the primary key of the SubscriptionDescriptionItem
   * @param header composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * @param partnerId composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * @param itemNo the number that identifies the description item within the description
   * @param text the text to display for the type of context
   */
  public AbstractBsSubscriptionDescriptionItem(IPrimaryKey key, java.lang.String header, java.math.BigInteger partnerId, java.math.BigInteger itemNo, java.lang.String text) {
    super(new SubscriptionDescriptionItemProxy(new SubscriptionDescriptionItem(key, header, partnerId, itemNo, text)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<ISubscriptionDescriptionItem> other = (IDto<ISubscriptionDescriptionItem>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<ISubscriptionDescriptionItem> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * Composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass + AddParentKeyAttributes as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object SubscriptionDescriptionItem</li>
   * </ul>
   * </p>
   * @return a java.lang.String header
   */
  public java.lang.String getHeader() {
    return dto.getHeader();
  }

  /**
   * <p>
   * Composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddParentKeyAttributes + AddParentKeyAttributes as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object SubscriptionDescriptionItem</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger partnerId
   */
  public java.math.BigInteger getPartnerId() {
    return dto.getPartnerId();
  }

  /**
   * <p>
   * the number that identifies the description item within the description
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object SubscriptionDescriptionItem</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger itemNo
   */
  public java.math.BigInteger getItemNo() {
    return dto.getItemNo();
  }

  /**
   * <p>
   * the text to display for the type of context
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object SubscriptionDescriptionItem</li>
   * </ul>
   * </p>
   * @return a java.lang.String text
   */
  public java.lang.String getText() {
    return dto.getText();
  }

  /**
   * <p>
   * Set the text.
   * </p>
   * <p>
   * the text to display for the type of context
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object SubscriptionDescriptionItem</li>
   * </ul>
   * </p>
   * @param text the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter text is null
   */
  public void setText(java.lang.String text) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setText(text);
  }

  /**
   * <p>
   * the description that contains the description items
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object SubscriptionDescriptionItem</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescription subscriptionDescription
   */
  public org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescription getSubscriptionDescription() {
    // Return 4
    return new org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescription(dto.getSubscriptionDescription());
  }

  /**
   * <p>
   * Set the subscriptionDescription.
   * </p>
   * <p>
   * the description that contains the description items
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object SubscriptionDescriptionItem</li>
   * </ul>
   * </p>
   * @param subscriptionDescription the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter subscriptionDescription is null
   */
  public void setSubscriptionDescription(org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescription subscriptionDescription) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setSubscriptionDescription(subscriptionDescription == null ? null : subscriptionDescription.toDto());
  }
}