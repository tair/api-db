/**
 * Copyright 2011 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package org.phoenixbioinformatics.api.bs.api;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import org.phoenixbioinformatics.api.db.api.IAccessRule;
import org.phoenixbioinformatics.api.db.api.AccessRuleProxy;
import org.phoenixbioinformatics.api.db.api.AccessRule;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the AccessRule. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * A rule that links a set of URIs to a specific access type for a specific partner
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>AssociationKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsAccessRule 
    extends AbstractDto<org.phoenixbioinformatics.api.db.api.IAccessRule> {

  /**
   * Create a BsAccessRule object from a AccessRule object.
   * 
   * @param dto the data-access layer AccessRule DTO
   * @throws DelegateException when there is a problem creating the AccessRule
   */
  public AbstractBsAccessRule(IAccessRule dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a AccessRule from new data.
   *
   * @param key the primary key of the AccessRule
   * @param accessTypesObject associated AccessType object
   * @param partnerObject associated Partner object
   * @param uriPatternsObject associated UriPattern object
   * @param accessTypeId Attribute that is part of the association key
   * @param uriPatternId Attribute that is part of the association key
   * @param partnerId foreign key used as primary key in association class
   * @param partner 
   */
  public AbstractBsAccessRule(IPrimaryKey key, org.phoenixbioinformatics.api.db.api.IAccessType accessTypesObject, org.phoenixbioinformatics.api.db.api.IPartner partnerObject, org.phoenixbioinformatics.api.db.api.IUriPattern uriPatternsObject, java.math.BigInteger accessTypeId, java.math.BigInteger uriPatternId, java.math.BigInteger partnerId, org.phoenixbioinformatics.api.db.api.IPartner partner) {
    super(new AccessRuleProxy(new AccessRule(key, accessTypesObject, partnerObject, uriPatternsObject, accessTypeId, uriPatternId, partnerId, partner)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<IAccessRule> other = (IDto<IAccessRule>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<IAccessRule> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * Foreign key used as primary key in association class
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddExplicitAssociationKeyProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object AccessRule</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger partnerId
   */
  public java.math.BigInteger getPartnerId() {
    return dto.getPartnerId();
  }

  /**
   * 
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object AccessRule</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsPartner partner
   */
  public org.phoenixbioinformatics.api.bs.api.BsPartner getPartner() {
    // Return 4
    return new org.phoenixbioinformatics.api.bs.api.BsPartner(dto.getPartner());
  }

  /**
   * <p>
   * Associated object
   * </p>
   * <p>
   * Added by AddAssociationKeyObjectProperties as data member
   * </p>
   * <p>
   * This property loads lazily on demand the first time you call this method,
   * not when you instantiate the BsAccessRule object.
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object AccessRule</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsAccessType accessType
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public org.phoenixbioinformatics.api.bs.api.BsAccessType getAccessType() throws java.sql.SQLException {
    // Return 4
    return new org.phoenixbioinformatics.api.bs.api.BsAccessType(dto.getAccessType());
  }

  /**
   * <p>
   * Associated object
   * </p>
   * <p>
   * Added by AddAssociationKeyObjectProperties as data member
   * </p>
   * <p>
   * This property loads lazily on demand the first time you call this method,
   * not when you instantiate the BsAccessRule object.
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object AccessRule</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsUriPattern uriPattern
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public org.phoenixbioinformatics.api.bs.api.BsUriPattern getUriPattern() throws java.sql.SQLException {
    // Return 4
    return new org.phoenixbioinformatics.api.bs.api.BsUriPattern(dto.getUriPattern());
  }

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddAssociationKeyAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object AccessRule</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger accessTypeId
   */
  public java.math.BigInteger getAccessTypeId() {
    return dto.getAccessTypeId();
  }

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddAssociationKeyAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object AccessRule</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger uriPatternId
   */
  public java.math.BigInteger getUriPatternId() {
    return dto.getUriPatternId();
  }
}