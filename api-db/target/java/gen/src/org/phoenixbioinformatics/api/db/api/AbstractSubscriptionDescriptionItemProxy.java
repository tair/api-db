/**
 * Copyright 2011 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractDbDtoProxy.vsl

package org.phoenixbioinformatics.api.db.api;


import com.poesys.db.dto.AbstractLazyLoadingDtoProxy;


/**
 * <p>
 * A data-access layer data-transfer object (DTO) lazy-loading proxy for the 
 * SubscriptionDescriptionItem. This class is an abstract class that contains AndroMDA 
 * generated code; change nothing in this class. Instead, override any methods 
 * in the concrete subclass generated in the same package. AndroMDA will 
 * overwrite this class each time you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * A specific item of descriptive text
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractSubscriptionDescriptionItemProxy extends AbstractLazyLoadingDtoProxy implements ISubscriptionDescriptionItem {
  /** Default serial version UID for the Serializable DTO */
  private static final long serialVersionUID = 1L;

  // Lazy-loading query setter strategy nested classes for single-object associations
  
  /**
   * Create a SubscriptionDescriptionItemProxy. The concrete subclass must call this constructor.
   *
   * @param dto the DTO to proxy
   */
  public AbstractSubscriptionDescriptionItemProxy(SubscriptionDescriptionItem dto) {
    super(dto);

    // Setter arrays
    readObjectSetters = new java.util.concurrent.CopyOnWriteArrayList<com.poesys.db.dto.ISet>();
  }

  @Override
  public boolean equals(Object obj) {
    AbstractSubscriptionDescriptionItemProxy otherProxy = (AbstractSubscriptionDescriptionItemProxy)obj;
    return ((SubscriptionDescriptionItem)dto).equals(otherProxy.dto);
  }

  @Override
  public int hashCode() {
    return ((SubscriptionDescriptionItem)dto).hashCode();
  }

  // Local properties (attributes, associations, and association classes)

  /**
   * Get an object of java.lang.String
   *
   * Source: AddExplicitSubKeyProperties + addNaturalSubkeyOnClass + AddParentKeyAttributes
   * Lazy: false
   * 
   * @return a java.lang.String
   */
  public java.lang.String getDescriptionType() {
    return ((SubscriptionDescriptionItem)dto).getDescriptionType();
  }

  /**
   * Get an object of java.lang.String
   *
   * Source: AddNaturalKeyProperties + AddParentKeyAttributes + AddParentKeyAttributes
   * Lazy: false
   * 
   * @return a java.lang.String
   */
  public java.lang.String getPartnerId() {
    return ((SubscriptionDescriptionItem)dto).getPartnerId();
  }

  /**
   * Get an object of java.math.BigInteger
   *
   * Source: AddExplicitSubKeyProperties + addNaturalSubkeyOnClass
   * Lazy: false
   * 
   * @return a java.math.BigInteger
   */
  public java.math.BigInteger getItemNo() {
    return ((SubscriptionDescriptionItem)dto).getItemNo();
  }

  /**
   * Get an object of java.lang.String
   *
   * Source: AddLocalAttributeProperties
   * Lazy: false
   * 
   * @return a java.lang.String
   */
  public java.lang.String getText() {
    return ((SubscriptionDescriptionItem)dto).getText();
  }

  public void setText(java.lang.String text)
      throws com.poesys.db.InvalidParametersException {
    ((SubscriptionDescriptionItem)dto).setText(text);
  }

  /**
   * Get an object of org.phoenixbioinformatics.api.db.api.ISubscriptionDescription
   *
   * Source: AddToOneAssociationRequiredObjectProperties
   * Lazy: false
   * 
   * @return a org.phoenixbioinformatics.api.db.api.ISubscriptionDescription
   */
  public org.phoenixbioinformatics.api.db.api.ISubscriptionDescription getSubscriptionDescription() {
    return ((SubscriptionDescriptionItem)dto).getSubscriptionDescription();
  }

  public void setSubscriptionDescription(org.phoenixbioinformatics.api.db.api.ISubscriptionDescription subscriptionDescription)
      throws com.poesys.db.InvalidParametersException {
    ((SubscriptionDescriptionItem)dto).setSubscriptionDescription(subscriptionDescription);
  }

  public void markChildrenDeleted() throws com.poesys.db.dto.DtoStatusException {
  	((SubscriptionDescriptionItem)dto).markChildrenDeleted();
  }
}