/**
 * Copyright 2011 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package org.phoenixbioinformatics.api.bs.api;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import org.phoenixbioinformatics.api.db.api.ISubscription;
import org.phoenixbioinformatics.api.db.api.SubscriptionProxy;
import org.phoenixbioinformatics.api.db.api.Subscription;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the Subscription. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * An agreement by a party to take and pay for access to a partner system; a
 * relationship between a party and a partner system
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>AssociationKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsSubscription 
    extends AbstractDto<org.phoenixbioinformatics.api.db.api.ISubscription> {

  /**
   * A List builder helper class for building a business-layer List 
   * of BsSubscriptionTransaction objects from a List subscriptionTransactions of data-access-layer 
   * org.phoenixbioinformatics.api.db.api.ISubscriptionTransaction objects
   */
  private class BsSubscriptionTransactionsListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.phoenixbioinformatics.api.db.api.ISubscriptionTransaction, org.phoenixbioinformatics.api.bs.api.BsSubscriptionTransaction> {
    @Override
    public org.phoenixbioinformatics.api.bs.api.BsSubscriptionTransaction get(org.phoenixbioinformatics.api.db.api.ISubscriptionTransaction dto) {
      return new org.phoenixbioinformatics.api.bs.api.BsSubscriptionTransaction(dto);
    }
  }

  /**
   * A List builder helper class for building a data-access-layer List 
   * of SubscriptionTransaction objects from an input List subscriptionTransactions of 
   * business-layer BsSubscriptionTransaction objects
   */
  private class SubscriptionTransactionsListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.phoenixbioinformatics.api.bs.api.BsSubscriptionTransaction, org.phoenixbioinformatics.api.db.api.ISubscriptionTransaction> {
    @Override
    public org.phoenixbioinformatics.api.db.api.ISubscriptionTransaction get(org.phoenixbioinformatics.api.bs.api.BsSubscriptionTransaction dto) {
      return dto.toDto();
    }
  }

  /**
   * Create a BsSubscription object from a Subscription object.
   * 
   * @param dto the data-access layer Subscription DTO
   * @throws DelegateException when there is a problem creating the Subscription
   */
  public AbstractBsSubscription(ISubscription dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a Subscription from new data.
   *
   * @param key the primary key of the Subscription
   * @param subscribedPartnersObject associated Partner object
   * @param subscribersObject associated Party object
   * @param partnerId Attribute that is part of the association key
   * @param partyId Attribute that is part of the association key
   * @param startDate the date and time at which the subscription commences; if this is in the future,
the subscription is not yet in effect
   * @param endDate the date and time at which the subscription ends
   * @param subscriptionId an alternate single-number identifier for the subscription
   */
  public AbstractBsSubscription(IPrimaryKey key, org.phoenixbioinformatics.api.db.api.IPartner subscribedPartnersObject, org.phoenixbioinformatics.api.db.api.IParty subscribersObject, java.lang.String partnerId, java.math.BigInteger partyId, java.sql.Timestamp startDate, java.sql.Timestamp endDate, java.math.BigInteger subscriptionId) {
    super(new SubscriptionProxy(new Subscription(key, subscribedPartnersObject, subscribersObject, partnerId, partyId, startDate, endDate, subscriptionId)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<ISubscription> other = (IDto<ISubscription>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<ISubscription> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * the date and time at which the subscription commences; if this is in the future,
   * the subscription is not yet in effect
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Subscription</li>
   * </ul>
   * </p>
   * @return a java.sql.Timestamp startDate
   */
  public java.sql.Timestamp getStartDate() {
    return dto.getStartDate();
  }

  /**
   * <p>
   * Set the startDate.
   * </p>
   * <p>
   * the date and time at which the subscription commences; if this is in the future,
   * the subscription is not yet in effect
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Subscription</li>
   * </ul>
   * </p>
   * @param startDate the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter startDate is null
   */
  public void setStartDate(java.sql.Timestamp startDate) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setStartDate(startDate);
  }

  /**
   * <p>
   * the date and time at which the subscription ends
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Subscription</li>
   * </ul>
   * </p>
   * @return a java.sql.Timestamp endDate
   */
  public java.sql.Timestamp getEndDate() {
    return dto.getEndDate();
  }

  /**
   * <p>
   * Set the endDate.
   * </p>
   * <p>
   * the date and time at which the subscription ends
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Subscription</li>
   * </ul>
   * </p>
   * @param endDate the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter endDate is null
   */
  public void setEndDate(java.sql.Timestamp endDate) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setEndDate(endDate);
  }

  /**
   * <p>
   * an alternate single-number identifier for the subscription
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Subscription</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger subscriptionId
   */
  public java.math.BigInteger getSubscriptionId() {
    return dto.getSubscriptionId();
  }

  /**
   * <p>
   * Set the subscriptionId.
   * </p>
   * <p>
   * an alternate single-number identifier for the subscription
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Subscription</li>
   * </ul>
   * </p>
   * @param subscriptionId the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter subscriptionId is null
   */
  public void setSubscriptionId(java.math.BigInteger subscriptionId) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setSubscriptionId(subscriptionId);
  }

  /**
   * <p>
   * the set of subscription transactions for the subscription
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Subscription</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsSubscriptionTransaction subscriptionId
   */
  public java.util.List<org.phoenixbioinformatics.api.bs.api.BsSubscriptionTransaction> getSubscriptionTransactions() {
    BsSubscriptionTransactionsListBuilder builder = new BsSubscriptionTransactionsListBuilder();
    return builder.getList(dto.getSubscriptionTransactions());
  }

  /**
   * <p>
   * Set the subscriptionTransactions.
   * </p>
   * <p>
   * the set of subscription transactions for the subscription
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Subscription</li>
   * </ul>
   * </p>
   * @param subscriptionId the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   */
  public void setSubscriptionTransactions(java.util.List<org.phoenixbioinformatics.api.bs.api.BsSubscriptionTransaction> subscriptionId) 
      throws com.poesys.db.dto.DtoStatusException{
    SubscriptionTransactionsListBuilder builder = new SubscriptionTransactionsListBuilder();
      dto.setSubscriptionTransactions(builder.getList(subscriptionId));
  }

  /**
   * <p>
   * Associated object
   * </p>
   * <p>
   * Added by AddAssociationKeyObjectProperties as data member
   * </p>
   * <p>
   * This property loads lazily on demand the first time you call this method,
   * not when you instantiate the BsSubscription object.
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Subscription</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsPartner partner
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public org.phoenixbioinformatics.api.bs.api.BsPartner getPartner() throws java.sql.SQLException {
    // Return 4
    return new org.phoenixbioinformatics.api.bs.api.BsPartner(dto.getPartner());
  }

  /**
   * <p>
   * Associated object
   * </p>
   * <p>
   * Added by AddAssociationKeyObjectProperties as data member
   * </p>
   * <p>
   * This property loads lazily on demand the first time you call this method,
   * not when you instantiate the BsSubscription object.
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Subscription</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsParty subscriber
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public org.phoenixbioinformatics.api.bs.api.BsParty getSubscriber() throws java.sql.SQLException {
    // Return 4
    return new org.phoenixbioinformatics.api.bs.api.BsParty(dto.getSubscriber());
  }

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddAssociationKeyAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Subscription</li>
   * </ul>
   * </p>
   * @return a java.lang.String partnerId
   */
  public java.lang.String getPartnerId() {
    return dto.getPartnerId();
  }

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddAssociationKeyAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Subscription</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger partyId
   */
  public java.math.BigInteger getPartyId() {
    return dto.getPartyId();
  }

  /**
   * Add a SubscriptionTransaction object to the subscriptionTransactions collection.
   *
   * @param object the object to add to the collection
   */
  public void addSubscriptionTransactionsSubscriptionTransaction(org.phoenixbioinformatics.api.bs.api.BsSubscriptionTransaction object) {
    dto.addSubscriptionTransactionsSubscriptionTransaction(object.toDto());
  }
}