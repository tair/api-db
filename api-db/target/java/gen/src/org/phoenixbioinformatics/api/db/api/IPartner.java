/**
 * Copyright 2011 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: IDbDto.vsl

package org.phoenixbioinformatics.api.db.api;

import com.poesys.db.dto.IDbDto;

import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;


/**
 * <p>
 * A data-access layer data-transfer-object interface for the Partner. 
 * The data-transfer-object class and proxy class implement this interface, as
 * does the business-layer data-transfer-object class.
 * </p>
 * <p>
 * a system that comprises a unit for subscription, authentication, and
 * authorization
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>NaturalKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public interface IPartner extends IDbDto {

  boolean equals(Object arg0);

  int hashCode();

  /**
   * <p>
   * Mark any children of this DTO as deleted.
   * </p>
   *
   * @throws DtoStatusException when the child cannot be set to DELETED status
   */
  void markChildrenDeleted() throws DtoStatusException;

  IPrimaryKey getPrimaryKey();
  

  /**
   * 
   * <p>
   * Added by AddNaturalKeyProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: partnerId
   * </p>
   * @return a java.lang.String partnerId
   */
  public java.lang.String getPartnerId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * the name of the partner system
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: name
   * </p>
   * @return a java.lang.String name
   */
  public java.lang.String getName();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the name.
   * </p>
   *
   * @param name the value to set into the name
   * @throws com.poesys.db.InvalidParametersException when the name 
   *       value is null
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setName(java.lang.String name) throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException;


  /**
   * <p>
   * a URI that returns a logo for the partner
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: logoUri
   * </p>
   * @return a java.lang.String logoUri
   */
  public java.lang.String getLogoUri();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the logoUri.
   * </p>
   *
   * @param logoUri the value to set into the logoUri
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setLogoUri(java.lang.String logoUri) throws com.poesys.db.dto.DtoStatusException;


  /**
   * <p>
   * a URI that returns an array of subscription terms for the partner
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: termOfServiceUri
   * </p>
   * @return a java.lang.String termOfServiceUri
   */
  public java.lang.String getTermOfServiceUri();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the termOfServiceUri.
   * </p>
   *
   * @param termOfServiceUri the value to set into the termOfServiceUri
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setTermOfServiceUri(java.lang.String termOfServiceUri) throws com.poesys.db.dto.DtoStatusException;


  /**
   * <p>
   * the member that subscribes to the system
   * </p>
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties
   * Owning DTO: Party
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: subscribers
   * </p>
   * <p>
   * This property loads lazily on demand rather than when you first query the 
   * IPartner object.
   * </p>
   * @return a java.util.Collection<org.phoenixbioinformatics.api.db.api.IParty> subscribers
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public java.util.Collection<org.phoenixbioinformatics.api.db.api.IParty> getSubscribers() throws java.sql.SQLException;

  /**
   * Clear the subscribers so that it will lazily reload.
   */
  public void clearSubscribers();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the subscribers.
   * </p>
   *
   * @param subscribers the value to set into the subscribers
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setSubscriber(java.util.Collection<org.phoenixbioinformatics.api.db.api.IParty> subscribers) throws com.poesys.db.dto.DtoStatusException;


  /**
   * <p>
   * the set of activation codes for the partner
   * </p>
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties
   * Owning DTO: ActivationCode
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: activationCodes
   * </p>
   * @return a java.util.Collection<org.phoenixbioinformatics.api.db.api.IActivationCode> activationCodes
   */
  public java.util.Collection<org.phoenixbioinformatics.api.db.api.IActivationCode> getActivationCodes();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the activationCodes.
   * </p>
   *
   * @param activationCodes the value to set into the activationCodes
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setActivationCodes(java.util.Collection<org.phoenixbioinformatics.api.db.api.IActivationCode> activationCodes) throws com.poesys.db.dto.DtoStatusException;


  /**
   * 
   * <p>
   * Added by AddToManyAssociatedKeyCollectionProperties
   * Owning DTO: AccessRule
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: accessRules
   * </p>
   * @return a java.util.Collection<org.phoenixbioinformatics.api.db.api.IAccessRule> accessRules
   */
  public java.util.Collection<org.phoenixbioinformatics.api.db.api.IAccessRule> getAccessRules();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the accessRules.
   * </p>
   *
   * @param accessRules the value to set into the accessRules
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setAccessRules(java.util.Collection<org.phoenixbioinformatics.api.db.api.IAccessRule> accessRules) throws com.poesys.db.dto.DtoStatusException;


  /**
   * <p>
   * the set of patterns that identify this partner
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: PartnerPattern
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: patterns
   * </p>
   * @return a java.util.Collection<org.phoenixbioinformatics.api.db.api.IPartnerPattern> patterns
   */
  public java.util.Collection<org.phoenixbioinformatics.api.db.api.IPartnerPattern> getPatterns();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the patterns.
   * </p>
   *
   * @param patterns the value to set into the patterns
   * @throws com.poesys.db.InvalidParametersException when the patterns 
   *       value is null
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setPatterns(java.util.Collection<org.phoenixbioinformatics.api.db.api.IPartnerPattern> patterns) throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException;


  /**
   * <p>
   * the set of subscription terms for the partner
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: SubscriptionTerm
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: subscriptionTerms
   * </p>
   * @return a java.util.Collection<org.phoenixbioinformatics.api.db.api.ISubscriptionTerm> subscriptionTerms
   */
  public java.util.Collection<org.phoenixbioinformatics.api.db.api.ISubscriptionTerm> getSubscriptionTerms();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the subscriptionTerms.
   * </p>
   *
   * @param subscriptionTerms the value to set into the subscriptionTerms
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setSubscriptionTerms(java.util.Collection<org.phoenixbioinformatics.api.db.api.ISubscriptionTerm> subscriptionTerms) throws com.poesys.db.dto.DtoStatusException;


  /**
   * <p>
   * the set of subscription descriptions within the partner
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: SubscriptionDescription
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: subscriptionDescriptions
   * </p>
   * @return a java.util.Collection<org.phoenixbioinformatics.api.db.api.ISubscriptionDescription> subscriptionDescriptions
   */
  public java.util.Collection<org.phoenixbioinformatics.api.db.api.ISubscriptionDescription> getSubscriptionDescriptions();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the subscriptionDescriptions.
   * </p>
   *
   * @param subscriptionDescriptions the value to set into the subscriptionDescriptions
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setSubscriptionDescriptions(java.util.Collection<org.phoenixbioinformatics.api.db.api.ISubscriptionDescription> subscriptionDescriptions) throws com.poesys.db.dto.DtoStatusException;


  /**
   * <p>
   * the set of IP-address metering counts for a partner
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: IpCount
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: ipCounts
   * </p>
   * @return a java.util.Collection<org.phoenixbioinformatics.api.db.api.IIpCount> ipCounts
   */
  public java.util.Collection<org.phoenixbioinformatics.api.db.api.IIpCount> getIpCounts();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the ipCounts.
   * </p>
   *
   * @param ipCounts the value to set into the ipCounts
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setIpCounts(java.util.Collection<org.phoenixbioinformatics.api.db.api.IIpCount> ipCounts) throws com.poesys.db.dto.DtoStatusException;


  /**
   * 
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: LimitValue
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: limitValues
   * </p>
   * @return a java.util.Collection<org.phoenixbioinformatics.api.db.api.ILimitValue> limitValues
   */
  public java.util.Collection<org.phoenixbioinformatics.api.db.api.ILimitValue> getLimitValues();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the limitValues.
   * </p>
   *
   * @param limitValues the value to set into the limitValues
   * @throws com.poesys.db.InvalidParametersException when the limitValues 
   *       value is null
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setLimitValues(java.util.Collection<org.phoenixbioinformatics.api.db.api.ILimitValue> limitValues) throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException;


  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties
   * Owning DTO: Subscription
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: subscribers
   * </p>
   * <p>
   * This property loads lazily on demand rather than when you first query the 
   * IPartner object.
   * </p>
   * @return a java.util.Collection<org.phoenixbioinformatics.api.db.api.ISubscription> subscription
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public java.util.Collection<org.phoenixbioinformatics.api.db.api.ISubscription> getSubscription() throws java.sql.SQLException;

  /**
   * Clear the subscription so that it will lazily reload.
   */
  public void clearSubscription();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the subscription.
   * </p>
   *
   * @param subscription the value to set into the subscription
   * @throws com.poesys.db.InvalidParametersException when the subscription 
   *       value is null
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setSubscription(java.util.Collection<org.phoenixbioinformatics.api.db.api.ISubscription> subscription) throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException;


  /**
   * Add a Party object to the subscribers collection.
   *
   * @param object the object to add to the collection
   * @throws java.sql.SQLException when there is a problem lazily loading the 
   *                               collection
   */
  public void addSubscribersParty(org.phoenixbioinformatics.api.db.api.IParty object) throws java.sql.SQLException;

  /**
   * Add a ActivationCode object to the activationCodes collection.
   *
   * @param object the object to add to the collection
   */
  public void addActivationCodesActivationCode(org.phoenixbioinformatics.api.db.api.IActivationCode object);

  /**
   * Add a AccessRule object to the accessRules collection.
   *
   * @param object the object to add to the collection
   */
  public void addAccessRulesAccessRule(org.phoenixbioinformatics.api.db.api.IAccessRule object);

  /**
   * Add a PartnerPattern object to the patterns collection.
   *
   * @param object the object to add to the collection
   */
  public void addPatternsPartnerPattern(org.phoenixbioinformatics.api.db.api.IPartnerPattern object);

  /**
   * Add a SubscriptionTerm object to the subscriptionTerms collection.
   *
   * @param object the object to add to the collection
   */
  public void addSubscriptionTermsSubscriptionTerm(org.phoenixbioinformatics.api.db.api.ISubscriptionTerm object);

  /**
   * Add a SubscriptionDescription object to the subscriptionDescriptions collection.
   *
   * @param object the object to add to the collection
   */
  public void addSubscriptionDescriptionsSubscriptionDescription(org.phoenixbioinformatics.api.db.api.ISubscriptionDescription object);

  /**
   * Add a IpCount object to the ipCounts collection.
   *
   * @param object the object to add to the collection
   */
  public void addIpCountsIpCount(org.phoenixbioinformatics.api.db.api.IIpCount object);

  /**
   * Add a LimitValue object to the limitValues collection.
   *
   * @param object the object to add to the collection
   */
  public void addLimitValuesLimitValue(org.phoenixbioinformatics.api.db.api.ILimitValue object);

  /**
   * Add a Subscription object to the subscription collection.
   *
   * @param object the object to add to the collection
   * @throws java.sql.SQLException when there is a problem lazily loading the 
   *                               collection
   */
  public void addSubscriptionSubscription(org.phoenixbioinformatics.api.db.api.ISubscription object) throws java.sql.SQLException;
}