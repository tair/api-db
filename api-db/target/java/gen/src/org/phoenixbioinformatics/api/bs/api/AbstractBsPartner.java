/**
 * Copyright 2011 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package org.phoenixbioinformatics.api.bs.api;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import org.phoenixbioinformatics.api.db.api.IPartner;
import org.phoenixbioinformatics.api.db.api.PartnerProxy;
import org.phoenixbioinformatics.api.db.api.Partner;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the Partner. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * a system that comprises a unit for subscription, authentication, and
 * authorization
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>NaturalKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsPartner 
    extends AbstractDto<org.phoenixbioinformatics.api.db.api.IPartner> {

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsParty objects from a Collection subscribers of data-access-layer 
   * org.phoenixbioinformatics.api.db.api.IParty objects
   */
  private class BsSubscribersCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.db.api.IParty, org.phoenixbioinformatics.api.bs.api.BsParty> {
    @Override
    public org.phoenixbioinformatics.api.bs.api.BsParty get(org.phoenixbioinformatics.api.db.api.IParty dto) {
      return new org.phoenixbioinformatics.api.bs.api.BsParty(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of Party objects from an input Collection subscribers of 
   * business-layer BsParty objects
   */
  private class SubscribersCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.bs.api.BsParty, org.phoenixbioinformatics.api.db.api.IParty> {
    @Override
    public org.phoenixbioinformatics.api.db.api.IParty get(org.phoenixbioinformatics.api.bs.api.BsParty dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsActivationCode objects from a Collection activationCodes of data-access-layer 
   * org.phoenixbioinformatics.api.db.api.IActivationCode objects
   */
  private class BsActivationCodesCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.db.api.IActivationCode, org.phoenixbioinformatics.api.bs.api.BsActivationCode> {
    @Override
    public org.phoenixbioinformatics.api.bs.api.BsActivationCode get(org.phoenixbioinformatics.api.db.api.IActivationCode dto) {
      return new org.phoenixbioinformatics.api.bs.api.BsActivationCode(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of ActivationCode objects from an input Collection activationCodes of 
   * business-layer BsActivationCode objects
   */
  private class ActivationCodesCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.bs.api.BsActivationCode, org.phoenixbioinformatics.api.db.api.IActivationCode> {
    @Override
    public org.phoenixbioinformatics.api.db.api.IActivationCode get(org.phoenixbioinformatics.api.bs.api.BsActivationCode dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsAccessRule objects from a Collection accessRules of data-access-layer 
   * org.phoenixbioinformatics.api.db.api.IAccessRule objects
   */
  private class BsAccessRulesCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.db.api.IAccessRule, org.phoenixbioinformatics.api.bs.api.BsAccessRule> {
    @Override
    public org.phoenixbioinformatics.api.bs.api.BsAccessRule get(org.phoenixbioinformatics.api.db.api.IAccessRule dto) {
      return new org.phoenixbioinformatics.api.bs.api.BsAccessRule(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of AccessRule objects from an input Collection accessRules of 
   * business-layer BsAccessRule objects
   */
  private class AccessRulesCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.bs.api.BsAccessRule, org.phoenixbioinformatics.api.db.api.IAccessRule> {
    @Override
    public org.phoenixbioinformatics.api.db.api.IAccessRule get(org.phoenixbioinformatics.api.bs.api.BsAccessRule dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsPartnerPattern objects from a Collection patterns of data-access-layer 
   * org.phoenixbioinformatics.api.db.api.IPartnerPattern objects
   */
  private class BsPatternsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.db.api.IPartnerPattern, org.phoenixbioinformatics.api.bs.api.BsPartnerPattern> {
    @Override
    public org.phoenixbioinformatics.api.bs.api.BsPartnerPattern get(org.phoenixbioinformatics.api.db.api.IPartnerPattern dto) {
      return new org.phoenixbioinformatics.api.bs.api.BsPartnerPattern(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of PartnerPattern objects from an input Collection patterns of 
   * business-layer BsPartnerPattern objects
   */
  private class PatternsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.bs.api.BsPartnerPattern, org.phoenixbioinformatics.api.db.api.IPartnerPattern> {
    @Override
    public org.phoenixbioinformatics.api.db.api.IPartnerPattern get(org.phoenixbioinformatics.api.bs.api.BsPartnerPattern dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsSubscriptionTerm objects from a Collection subscriptionTerms of data-access-layer 
   * org.phoenixbioinformatics.api.db.api.ISubscriptionTerm objects
   */
  private class BsSubscriptionTermsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.db.api.ISubscriptionTerm, org.phoenixbioinformatics.api.bs.api.BsSubscriptionTerm> {
    @Override
    public org.phoenixbioinformatics.api.bs.api.BsSubscriptionTerm get(org.phoenixbioinformatics.api.db.api.ISubscriptionTerm dto) {
      return new org.phoenixbioinformatics.api.bs.api.BsSubscriptionTerm(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of SubscriptionTerm objects from an input Collection subscriptionTerms of 
   * business-layer BsSubscriptionTerm objects
   */
  private class SubscriptionTermsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.bs.api.BsSubscriptionTerm, org.phoenixbioinformatics.api.db.api.ISubscriptionTerm> {
    @Override
    public org.phoenixbioinformatics.api.db.api.ISubscriptionTerm get(org.phoenixbioinformatics.api.bs.api.BsSubscriptionTerm dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsSubscriptionDescription objects from a Collection subscriptionDescriptions of data-access-layer 
   * org.phoenixbioinformatics.api.db.api.ISubscriptionDescription objects
   */
  private class BsSubscriptionDescriptionsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.db.api.ISubscriptionDescription, org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescription> {
    @Override
    public org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescription get(org.phoenixbioinformatics.api.db.api.ISubscriptionDescription dto) {
      return new org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescription(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of SubscriptionDescription objects from an input Collection subscriptionDescriptions of 
   * business-layer BsSubscriptionDescription objects
   */
  private class SubscriptionDescriptionsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescription, org.phoenixbioinformatics.api.db.api.ISubscriptionDescription> {
    @Override
    public org.phoenixbioinformatics.api.db.api.ISubscriptionDescription get(org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescription dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsIpCount objects from a Collection ipCounts of data-access-layer 
   * org.phoenixbioinformatics.api.db.api.IIpCount objects
   */
  private class BsIpCountsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.db.api.IIpCount, org.phoenixbioinformatics.api.bs.api.BsIpCount> {
    @Override
    public org.phoenixbioinformatics.api.bs.api.BsIpCount get(org.phoenixbioinformatics.api.db.api.IIpCount dto) {
      return new org.phoenixbioinformatics.api.bs.api.BsIpCount(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of IpCount objects from an input Collection ipCounts of 
   * business-layer BsIpCount objects
   */
  private class IpCountsCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.bs.api.BsIpCount, org.phoenixbioinformatics.api.db.api.IIpCount> {
    @Override
    public org.phoenixbioinformatics.api.db.api.IIpCount get(org.phoenixbioinformatics.api.bs.api.BsIpCount dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsLimitValue objects from a Collection limitValues of data-access-layer 
   * org.phoenixbioinformatics.api.db.api.ILimitValue objects
   */
  private class BsLimitValuesCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.db.api.ILimitValue, org.phoenixbioinformatics.api.bs.api.BsLimitValue> {
    @Override
    public org.phoenixbioinformatics.api.bs.api.BsLimitValue get(org.phoenixbioinformatics.api.db.api.ILimitValue dto) {
      return new org.phoenixbioinformatics.api.bs.api.BsLimitValue(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of LimitValue objects from an input Collection limitValues of 
   * business-layer BsLimitValue objects
   */
  private class LimitValuesCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.bs.api.BsLimitValue, org.phoenixbioinformatics.api.db.api.ILimitValue> {
    @Override
    public org.phoenixbioinformatics.api.db.api.ILimitValue get(org.phoenixbioinformatics.api.bs.api.BsLimitValue dto) {
      return dto.toDto();
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsSubscription objects from a Collection subscription of data-access-layer 
   * org.phoenixbioinformatics.api.db.api.ISubscription objects
   */
  private class BsSubscriptionCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.db.api.ISubscription, org.phoenixbioinformatics.api.bs.api.BsSubscription> {
    @Override
    public org.phoenixbioinformatics.api.bs.api.BsSubscription get(org.phoenixbioinformatics.api.db.api.ISubscription dto) {
      return new org.phoenixbioinformatics.api.bs.api.BsSubscription(dto);
    }
  }

  /**
   * A Collection builder helper class for building a data-access-layer Collection 
   * of Subscription objects from an input Collection subscription of 
   * business-layer BsSubscription objects
   */
  private class SubscriptionCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<org.phoenixbioinformatics.api.bs.api.BsSubscription, org.phoenixbioinformatics.api.db.api.ISubscription> {
    @Override
    public org.phoenixbioinformatics.api.db.api.ISubscription get(org.phoenixbioinformatics.api.bs.api.BsSubscription dto) {
      return dto.toDto();
    }
  }

  /**
   * Create a BsPartner object from a Partner object.
   * 
   * @param dto the data-access layer Partner DTO
   * @throws DelegateException when there is a problem creating the Partner
   */
  public AbstractBsPartner(IPartner dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a Partner from new data.
   *
   * @param key the primary key of the Partner
   * @param partnerId 
   * @param name the name of the partner system
   * @param logoUri a URI that returns a logo for the partner
   * @param termOfServiceUri a URI that returns an array of subscription terms for the partner
   */
  public AbstractBsPartner(IPrimaryKey key, java.lang.String partnerId, java.lang.String name, java.lang.String logoUri, java.lang.String termOfServiceUri) {
    super(new PartnerProxy(new Partner(key, partnerId, name, logoUri, termOfServiceUri)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<IPartner> other = (IDto<IPartner>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<IPartner> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * 
   * <p>
   * Added by AddNaturalKeyProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @return a java.lang.String partnerId
   */
  public java.lang.String getPartnerId() {
    return dto.getPartnerId();
  }

  /**
   * <p>
   * the name of the partner system
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @return a java.lang.String name
   */
  public java.lang.String getName() {
    return dto.getName();
  }

  /**
   * <p>
   * Set the name.
   * </p>
   * <p>
   * the name of the partner system
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @param name the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter name is null
   */
  public void setName(java.lang.String name) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setName(name);
  }

  /**
   * <p>
   * a URI that returns a logo for the partner
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @return a java.lang.String logoUri
   */
  public java.lang.String getLogoUri() {
    return dto.getLogoUri();
  }

  /**
   * <p>
   * Set the logoUri.
   * </p>
   * <p>
   * a URI that returns a logo for the partner
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @param logoUri the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   */
  public void setLogoUri(java.lang.String logoUri) 
      throws com.poesys.db.dto.DtoStatusException {
    dto.setLogoUri(logoUri);
  }

  /**
   * <p>
   * a URI that returns an array of subscription terms for the partner
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @return a java.lang.String termOfServiceUri
   */
  public java.lang.String getTermOfServiceUri() {
    return dto.getTermOfServiceUri();
  }

  /**
   * <p>
   * Set the termOfServiceUri.
   * </p>
   * <p>
   * a URI that returns an array of subscription terms for the partner
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @param termOfServiceUri the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   */
  public void setTermOfServiceUri(java.lang.String termOfServiceUri) 
      throws com.poesys.db.dto.DtoStatusException {
    dto.setTermOfServiceUri(termOfServiceUri);
  }

  /**
   * <p>
   * the member that subscribes to the system
   * </p>
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties as data member
   * </p>
   * <p>
   * This property loads lazily on demand the first time you call this method,
   * not when you instantiate the BsPartner object.
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsParty termOfServiceUri
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsParty> getSubscribers() throws java.sql.SQLException {
    BsSubscribersCollectionBuilder builder = new BsSubscribersCollectionBuilder();
    return builder.getCollection(dto.getSubscribers());
  }

  /**
   * <p>
   * Set the subscriber.
   * </p>
   * <p>
   * the member that subscribes to the system
   * </p>
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @param termOfServiceUri the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   */
  public void setSubscriber(java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsParty> termOfServiceUri) 
      throws com.poesys.db.dto.DtoStatusException{
    SubscribersCollectionBuilder builder = new SubscribersCollectionBuilder();
      dto.setSubscriber(builder.getCollection(termOfServiceUri));
  }

  /**
   * <p>
   * the set of activation codes for the partner
   * </p>
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsActivationCode termOfServiceUri
   */
  public java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsActivationCode> getActivationCodes() {
    BsActivationCodesCollectionBuilder builder = new BsActivationCodesCollectionBuilder();
    return builder.getCollection(dto.getActivationCodes());
  }

  /**
   * <p>
   * Set the activationCodes.
   * </p>
   * <p>
   * the set of activation codes for the partner
   * </p>
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @param termOfServiceUri the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   */
  public void setActivationCodes(java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsActivationCode> termOfServiceUri) 
      throws com.poesys.db.dto.DtoStatusException{
    ActivationCodesCollectionBuilder builder = new ActivationCodesCollectionBuilder();
      dto.setActivationCodes(builder.getCollection(termOfServiceUri));
  }

  /**
   * 
   * <p>
   * Added by AddToManyAssociatedKeyCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsAccessRule termOfServiceUri
   */
  public java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsAccessRule> getAccessRules() {
    BsAccessRulesCollectionBuilder builder = new BsAccessRulesCollectionBuilder();
    return builder.getCollection(dto.getAccessRules());
  }

  /**
   * <p>
   * Set the accessRules.
   * </p>
   * 
   * <p>
   * Added by AddToManyAssociatedKeyCollectionProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @param termOfServiceUri the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   */
  public void setAccessRules(java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsAccessRule> termOfServiceUri) 
      throws com.poesys.db.dto.DtoStatusException{
    AccessRulesCollectionBuilder builder = new AccessRulesCollectionBuilder();
      dto.setAccessRules(builder.getCollection(termOfServiceUri));
  }

  /**
   * <p>
   * the set of patterns that identify this partner
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsPartnerPattern termOfServiceUri
   */
  public java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsPartnerPattern> getPatterns() {
    BsPatternsCollectionBuilder builder = new BsPatternsCollectionBuilder();
    return builder.getCollection(dto.getPatterns());
  }

  /**
   * <p>
   * Set the patterns.
   * </p>
   * <p>
   * the set of patterns that identify this partner
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @param termOfServiceUri the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter termOfServiceUri is null
   */
  public void setPatterns(java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsPartnerPattern> termOfServiceUri) 
      throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException {
    PatternsCollectionBuilder builder = new PatternsCollectionBuilder();
      dto.setPatterns(builder.getCollection(termOfServiceUri));
  }

  /**
   * <p>
   * the set of subscription terms for the partner
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsSubscriptionTerm termOfServiceUri
   */
  public java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsSubscriptionTerm> getSubscriptionTerms() {
    BsSubscriptionTermsCollectionBuilder builder = new BsSubscriptionTermsCollectionBuilder();
    return builder.getCollection(dto.getSubscriptionTerms());
  }

  /**
   * <p>
   * Set the subscriptionTerms.
   * </p>
   * <p>
   * the set of subscription terms for the partner
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @param termOfServiceUri the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   */
  public void setSubscriptionTerms(java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsSubscriptionTerm> termOfServiceUri) 
      throws com.poesys.db.dto.DtoStatusException{
    SubscriptionTermsCollectionBuilder builder = new SubscriptionTermsCollectionBuilder();
      dto.setSubscriptionTerms(builder.getCollection(termOfServiceUri));
  }

  /**
   * <p>
   * the set of subscription descriptions within the partner
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescription termOfServiceUri
   */
  public java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescription> getSubscriptionDescriptions() {
    BsSubscriptionDescriptionsCollectionBuilder builder = new BsSubscriptionDescriptionsCollectionBuilder();
    return builder.getCollection(dto.getSubscriptionDescriptions());
  }

  /**
   * <p>
   * Set the subscriptionDescriptions.
   * </p>
   * <p>
   * the set of subscription descriptions within the partner
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @param termOfServiceUri the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   */
  public void setSubscriptionDescriptions(java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescription> termOfServiceUri) 
      throws com.poesys.db.dto.DtoStatusException{
    SubscriptionDescriptionsCollectionBuilder builder = new SubscriptionDescriptionsCollectionBuilder();
      dto.setSubscriptionDescriptions(builder.getCollection(termOfServiceUri));
  }

  /**
   * <p>
   * the set of IP-address metering counts for a partner
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsIpCount termOfServiceUri
   */
  public java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsIpCount> getIpCounts() {
    BsIpCountsCollectionBuilder builder = new BsIpCountsCollectionBuilder();
    return builder.getCollection(dto.getIpCounts());
  }

  /**
   * <p>
   * Set the ipCounts.
   * </p>
   * <p>
   * the set of IP-address metering counts for a partner
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @param termOfServiceUri the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   */
  public void setIpCounts(java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsIpCount> termOfServiceUri) 
      throws com.poesys.db.dto.DtoStatusException{
    IpCountsCollectionBuilder builder = new IpCountsCollectionBuilder();
      dto.setIpCounts(builder.getCollection(termOfServiceUri));
  }

  /**
   * 
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsLimitValue termOfServiceUri
   */
  public java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsLimitValue> getLimitValues() {
    BsLimitValuesCollectionBuilder builder = new BsLimitValuesCollectionBuilder();
    return builder.getCollection(dto.getLimitValues());
  }

  /**
   * <p>
   * Set the limitValues.
   * </p>
   * 
   * <p>
   * Added by AddToManyChildCollectionProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @param termOfServiceUri the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter termOfServiceUri is null
   */
  public void setLimitValues(java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsLimitValue> termOfServiceUri) 
      throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException {
    LimitValuesCollectionBuilder builder = new LimitValuesCollectionBuilder();
      dto.setLimitValues(builder.getCollection(termOfServiceUri));
  }

  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties as data member
   * </p>
   * <p>
   * This property loads lazily on demand the first time you call this method,
   * not when you instantiate the BsPartner object.
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsSubscription termOfServiceUri
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsSubscription> getSubscription() throws java.sql.SQLException {
    BsSubscriptionCollectionBuilder builder = new BsSubscriptionCollectionBuilder();
    return builder.getCollection(dto.getSubscription());
  }

  /**
   * <p>
   * Set the subscription.
   * </p>
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Partner</li>
   * </ul>
   * </p>
   * @param termOfServiceUri the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter termOfServiceUri is null
   */
  public void setSubscription(java.util.Collection<org.phoenixbioinformatics.api.bs.api.BsSubscription> termOfServiceUri) 
      throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException {
    SubscriptionCollectionBuilder builder = new SubscriptionCollectionBuilder();
      dto.setSubscription(builder.getCollection(termOfServiceUri));
  }

  /**
   * Add a Party object to the subscribers collection.
   *
   * @param object the object to add to the collection
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public void addSubscribersParty(org.phoenixbioinformatics.api.bs.api.BsParty object) throws java.sql.SQLException {
    dto.addSubscribersParty(object.toDto());
  }

  /**
   * Add a ActivationCode object to the activationCodes collection.
   *
   * @param object the object to add to the collection
   */
  public void addActivationCodesActivationCode(org.phoenixbioinformatics.api.bs.api.BsActivationCode object) {
    dto.addActivationCodesActivationCode(object.toDto());
  }

  /**
   * Add a AccessRule object to the accessRules collection.
   *
   * @param object the object to add to the collection
   */
  public void addAccessRulesAccessRule(org.phoenixbioinformatics.api.bs.api.BsAccessRule object) {
    dto.addAccessRulesAccessRule(object.toDto());
  }

  /**
   * Add a PartnerPattern object to the patterns collection.
   *
   * @param object the object to add to the collection
   */
  public void addPatternsPartnerPattern(org.phoenixbioinformatics.api.bs.api.BsPartnerPattern object) {
    dto.addPatternsPartnerPattern(object.toDto());
  }

  /**
   * Add a SubscriptionTerm object to the subscriptionTerms collection.
   *
   * @param object the object to add to the collection
   */
  public void addSubscriptionTermsSubscriptionTerm(org.phoenixbioinformatics.api.bs.api.BsSubscriptionTerm object) {
    dto.addSubscriptionTermsSubscriptionTerm(object.toDto());
  }

  /**
   * Add a SubscriptionDescription object to the subscriptionDescriptions collection.
   *
   * @param object the object to add to the collection
   */
  public void addSubscriptionDescriptionsSubscriptionDescription(org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescription object) {
    dto.addSubscriptionDescriptionsSubscriptionDescription(object.toDto());
  }

  /**
   * Add a IpCount object to the ipCounts collection.
   *
   * @param object the object to add to the collection
   */
  public void addIpCountsIpCount(org.phoenixbioinformatics.api.bs.api.BsIpCount object) {
    dto.addIpCountsIpCount(object.toDto());
  }

  /**
   * Add a LimitValue object to the limitValues collection.
   *
   * @param object the object to add to the collection
   */
  public void addLimitValuesLimitValue(org.phoenixbioinformatics.api.bs.api.BsLimitValue object) {
    dto.addLimitValuesLimitValue(object.toDto());
  }

  /**
   * Add a Subscription object to the subscription collection.
   *
   * @param object the object to add to the collection
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public void addSubscriptionSubscription(org.phoenixbioinformatics.api.bs.api.BsSubscription object) throws java.sql.SQLException {
    dto.addSubscriptionSubscription(object.toDto());
  }
}