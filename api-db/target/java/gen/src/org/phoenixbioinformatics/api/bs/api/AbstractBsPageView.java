/**
 * Copyright 2011 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package org.phoenixbioinformatics.api.bs.api;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import org.phoenixbioinformatics.api.db.api.IPageView;
import org.phoenixbioinformatics.api.db.api.PageViewProxy;
import org.phoenixbioinformatics.api.db.api.PageView;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the PageView. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * A single access of a URI for a given IP address at a given date and time; may be
 * part of a session if it has a session id
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>Persistent</li>
 *     <li>SequenceKey</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsPageView 
    extends AbstractDto<org.phoenixbioinformatics.api.db.api.IPageView> {

  /**
   * Create a BsPageView object from a PageView object.
   * 
   * @param dto the data-access layer PageView DTO
   * @throws DelegateException when there is a problem creating the PageView
   */
  public AbstractBsPageView(IPageView dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a PageView from new data.
   *
   * @param key the primary key of the PageView
   * @param pageViewId primary key attribute
   * @param pageViewDate the date and time of the page view request
   * @param uri the request URI and any query string
   * @param ip the IP address of the requests in the session; all page views in the session
have this IP address
   * @param sessionId a token identifying a collection of page views as defined by the client
processing the page views
   * @param partyId foreign key used by setter to query associated object
   */
  public AbstractBsPageView(IPrimaryKey key, java.math.BigInteger pageViewId, java.sql.Timestamp pageViewDate, java.lang.String uri, java.lang.String ip, java.lang.String sessionId, java.math.BigInteger partyId) {
    super(new PageViewProxy(new PageView(key, pageViewId, pageViewDate, uri, ip, sessionId, partyId)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<IPageView> other = (IDto<IPageView>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<IPageView> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * Primary key attribute
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object PageView</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger pageViewId
   */
  public java.math.BigInteger getPageViewId() {
    return dto.getPageViewId();
  }

  /**
   * <p>
   * the date and time of the page view request
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object PageView</li>
   * </ul>
   * </p>
   * @return a java.sql.Timestamp pageViewDate
   */
  public java.sql.Timestamp getPageViewDate() {
    return dto.getPageViewDate();
  }

  /**
   * <p>
   * Set the pageViewDate.
   * </p>
   * <p>
   * the date and time of the page view request
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object PageView</li>
   * </ul>
   * </p>
   * @param pageViewDate the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter pageViewDate is null
   */
  public void setPageViewDate(java.sql.Timestamp pageViewDate) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setPageViewDate(pageViewDate);
  }

  /**
   * <p>
   * the request URI and any query string
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object PageView</li>
   * </ul>
   * </p>
   * @return a java.lang.String uri
   */
  public java.lang.String getUri() {
    return dto.getUri();
  }

  /**
   * <p>
   * Set the uri.
   * </p>
   * <p>
   * the request URI and any query string
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object PageView</li>
   * </ul>
   * </p>
   * @param uri the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter uri is null
   */
  public void setUri(java.lang.String uri) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setUri(uri);
  }

  /**
   * <p>
   * the IP address of the requests in the session; all page views in the session
   * have this IP address
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object PageView</li>
   * </ul>
   * </p>
   * @return a java.lang.String ip
   */
  public java.lang.String getIp() {
    return dto.getIp();
  }

  /**
   * <p>
   * Set the ip.
   * </p>
   * <p>
   * the IP address of the requests in the session; all page views in the session
   * have this IP address
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object PageView</li>
   * </ul>
   * </p>
   * @param ip the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter ip is null
   */
  public void setIp(java.lang.String ip) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setIp(ip);
  }

  /**
   * <p>
   * a token identifying a collection of page views as defined by the client
   * processing the page views
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object PageView</li>
   * </ul>
   * </p>
   * @return a java.lang.String sessionId
   */
  public java.lang.String getSessionId() {
    return dto.getSessionId();
  }

  /**
   * <p>
   * Set the sessionId.
   * </p>
   * <p>
   * a token identifying a collection of page views as defined by the client
   * processing the page views
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object PageView</li>
   * </ul>
   * </p>
   * @param sessionId the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter sessionId is null
   */
  public void setSessionId(java.lang.String sessionId) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setSessionId(sessionId);
  }

  /**
   * <p>
   * the optional party that initiated a session containing the page view; party is
   * optional because it depends on whether the party has authenticated or not, which
   * is outside the scope of the session
   * </p>
   * <p>
   * Added by AddToOneAssociationOptionalObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object PageView</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsParty party
   */
  public org.phoenixbioinformatics.api.bs.api.BsParty getParty() {
    org.phoenixbioinformatics.api.bs.api.BsParty bsObject = null;
    org.phoenixbioinformatics.api.db.api.IParty object = dto.getParty();
	if (object != null) {
	  bsObject = new org.phoenixbioinformatics.api.bs.api.BsParty(object);
	}
	return bsObject;
  }

  /**
   * <p>
   * Set the party.
   * </p>
   * <p>
   * the optional party that initiated a session containing the page view; party is
   * optional because it depends on whether the party has authenticated or not, which
   * is outside the scope of the session
   * </p>
   * <p>
   * Added by AddToOneAssociationOptionalObjectProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object PageView</li>
   * </ul>
   * </p>
   * @param party the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   */
  public void setParty(org.phoenixbioinformatics.api.bs.api.BsParty party) 
      throws com.poesys.db.dto.DtoStatusException {
    dto.setParty(party == null ? null : party.toDto());
  }

  /**
   * <p>
   * Foreign key used by setter to query associated object
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddToOneAssociationAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object PageView</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger partyId
   */
  public java.math.BigInteger getPartyId() {
    java.math.BigInteger bsObject = null;
    java.math.BigInteger object = dto.getPartyId();
    bsObject = object;
	return bsObject;
  }
}