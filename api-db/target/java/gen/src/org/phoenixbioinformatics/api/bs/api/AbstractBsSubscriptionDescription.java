/**
 * Copyright 2011 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package org.phoenixbioinformatics.api.bs.api;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import org.phoenixbioinformatics.api.db.api.ISubscriptionDescription;
import org.phoenixbioinformatics.api.db.api.SubscriptionDescriptionProxy;
import org.phoenixbioinformatics.api.db.api.SubscriptionDescription;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the SubscriptionDescription. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * A collection of descriptive texts to display for a particular kind of
 * subscription; a partner may have any number of such texts to display in
 * different named contexts
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>CompositeKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsSubscriptionDescription 
    extends AbstractDto<org.phoenixbioinformatics.api.db.api.ISubscriptionDescription> {

  /**
   * A List builder helper class for building a business-layer List 
   * of BsSubscriptionDescriptionItem objects from a List items of data-access-layer 
   * org.phoenixbioinformatics.api.db.api.ISubscriptionDescriptionItem objects
   */
  private class BsItemsListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.phoenixbioinformatics.api.db.api.ISubscriptionDescriptionItem, org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescriptionItem> {
    @Override
    public org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescriptionItem get(org.phoenixbioinformatics.api.db.api.ISubscriptionDescriptionItem dto) {
      return new org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescriptionItem(dto);
    }
  }

  /**
   * A List builder helper class for building a data-access-layer List 
   * of SubscriptionDescriptionItem objects from an input List items of 
   * business-layer BsSubscriptionDescriptionItem objects
   */
  private class ItemsListBuilder 
      extends com.poesys.bs.dto.ListBuilder<org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescriptionItem, org.phoenixbioinformatics.api.db.api.ISubscriptionDescriptionItem> {
    @Override
    public org.phoenixbioinformatics.api.db.api.ISubscriptionDescriptionItem get(org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescriptionItem dto) {
      return dto.toDto();
    }
  }

  /**
   * Create a BsSubscriptionDescription object from a SubscriptionDescription object.
   * 
   * @param dto the data-access layer SubscriptionDescription DTO
   * @throws DelegateException when there is a problem creating the SubscriptionDescription
   */
  public AbstractBsSubscriptionDescription(ISubscriptionDescription dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a SubscriptionDescription from new data.
   *
   * @param key the primary key of the SubscriptionDescription
   * @param partnerId composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * @param descriptionType the type of description:
Default
Individual
Institution
Commercial
   * @param header the header text for the section display
   */
  public AbstractBsSubscriptionDescription(IPrimaryKey key, java.lang.String partnerId, java.lang.String descriptionType, java.lang.String header) {
    super(new SubscriptionDescriptionProxy(new SubscriptionDescription(key, partnerId, descriptionType, header)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<ISubscriptionDescription> other = (IDto<ISubscriptionDescription>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<ISubscriptionDescription> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * Composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * </p>
   * <p>
   * Added by AddNaturalKeyProperties + AddParentKeyAttributes as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object SubscriptionDescription</li>
   * </ul>
   * </p>
   * @return a java.lang.String partnerId
   */
  public java.lang.String getPartnerId() {
    return dto.getPartnerId();
  }

  /**
   * <p>
   * the type of description:
   * </p>
   * <p>
   * Default
   * </p>
   * <p>
   * Individual
   * </p>
   * <p>
   * Institution
   * </p>
   * <p>
   * Commercial
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object SubscriptionDescription</li>
   * </ul>
   * </p>
   * @return a java.lang.String descriptionType
   */
  public java.lang.String getDescriptionType() {
    return dto.getDescriptionType();
  }

  /**
   * <p>
   * the header text for the section display
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object SubscriptionDescription</li>
   * </ul>
   * </p>
   * @return a java.lang.String header
   */
  public java.lang.String getHeader() {
    return dto.getHeader();
  }

  /**
   * <p>
   * Set the header.
   * </p>
   * <p>
   * the header text for the section display
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object SubscriptionDescription</li>
   * </ul>
   * </p>
   * @param header the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter header is null
   */
  public void setHeader(java.lang.String header) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setHeader(header);
  }

  /**
   * <p>
   * the partner to which the subscription description applies
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object SubscriptionDescription</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsPartner partner
   */
  public org.phoenixbioinformatics.api.bs.api.BsPartner getPartner() {
    // Return 4
    return new org.phoenixbioinformatics.api.bs.api.BsPartner(dto.getPartner());
  }

  /**
   * <p>
   * Set the partner.
   * </p>
   * <p>
   * the partner to which the subscription description applies
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object SubscriptionDescription</li>
   * </ul>
   * </p>
   * @param partner the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter partner is null
   */
  public void setPartner(org.phoenixbioinformatics.api.bs.api.BsPartner partner) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setPartner(partner == null ? null : partner.toDto());
  }

  /**
   * <p>
   * the set of items within the description
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object SubscriptionDescription</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescriptionItem partner
   */
  public java.util.List<org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescriptionItem> getItems() {
    BsItemsListBuilder builder = new BsItemsListBuilder();
    return builder.getList(dto.getItems());
  }

  /**
   * <p>
   * Set the items.
   * </p>
   * <p>
   * the set of items within the description
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object SubscriptionDescription</li>
   * </ul>
   * </p>
   * @param partner the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter partner is null
   */
  public void setItems(java.util.List<org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescriptionItem> partner) 
      throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException {
    ItemsListBuilder builder = new ItemsListBuilder();
      dto.setItems(builder.getList(partner));
  }

  /**
   * Add a SubscriptionDescriptionItem object to the items collection.
   *
   * @param object the object to add to the collection
   */
  public void addItemsSubscriptionDescriptionItem(org.phoenixbioinformatics.api.bs.api.BsSubscriptionDescriptionItem object) {
    dto.addItemsSubscriptionDescriptionItem(object.toDto());
  }
}