/**
 * Copyright 2011 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: IDbDto.vsl

package org.phoenixbioinformatics.api.db.api;

import com.poesys.db.dto.IDbDto;

import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;


/**
 * <p>
 * A data-access layer data-transfer-object interface for the AccessRule. 
 * The data-transfer-object class and proxy class implement this interface, as
 * does the business-layer data-transfer-object class.
 * </p>
 * <p>
 * A rule that links a set of URIs to a specific access type for a specific partner
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>AssociationKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public interface IAccessRule extends IDbDto {

  boolean equals(Object arg0);

  int hashCode();

  /**
   * <p>
   * Mark any children of this DTO as deleted.
   * </p>
   *
   * @throws DtoStatusException when the child cannot be set to DELETED status
   */
  void markChildrenDeleted() throws DtoStatusException;

  IPrimaryKey getPrimaryKey();
  

  /**
   * <p>
   * Foreign key used as primary key in association class
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddExplicitAssociationKeyProperties
   * Owning DTO: Partner
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: ${property.prefix}
   * </p>
   * @return a java.math.BigInteger partnerId
   */
  public java.math.BigInteger getPartnerId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not true
// Read/Write property: false

  /**
   * 
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties
   * Owning DTO: Partner
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: partner
   * </p>
   * @return a org.phoenixbioinformatics.api.db.api.IPartner partner
   */
  public org.phoenixbioinformatics.api.db.api.IPartner getPartner();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: false

  /**
   * <p>
   * Associated object
   * </p>
   * <p>
   * Added by AddAssociationKeyObjectProperties
   * Owning DTO: AccessType
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: accessTypes
   * </p>
   * <p>
   * This property loads lazily on demand rather than when you first query the 
   * IAccessRule object.
   * </p>
   * @return a org.phoenixbioinformatics.api.db.api.IAccessType accessType
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public org.phoenixbioinformatics.api.db.api.IAccessType getAccessType() throws java.sql.SQLException;

  /**
   * Clear the accessType so that it will lazily reload.
   */
  public void clearAccessType();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not true
// Read/Write property: false

  /**
   * <p>
   * Associated object
   * </p>
   * <p>
   * Added by AddAssociationKeyObjectProperties
   * Owning DTO: UriPattern
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: uriPatterns
   * </p>
   * <p>
   * This property loads lazily on demand rather than when you first query the 
   * IAccessRule object.
   * </p>
   * @return a org.phoenixbioinformatics.api.db.api.IUriPattern uriPattern
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public org.phoenixbioinformatics.api.db.api.IUriPattern getUriPattern() throws java.sql.SQLException;

  /**
   * Clear the uriPattern so that it will lazily reload.
   */
  public void clearUriPattern();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not true
// Read/Write property: false

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddAssociationKeyAttributeProperties
   * Owning DTO: AccessType
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: accessTypes
   * </p>
   * @return a java.math.BigInteger accessTypeId
   */
  public java.math.BigInteger getAccessTypeId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not true
// Read/Write property: false

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddAssociationKeyAttributeProperties
   * Owning DTO: UriPattern
   * Owning package: org.phoenixbioinformatics.api.db.api
   * Property prefix: uriPatterns
   * </p>
   * @return a java.math.BigInteger uriPatternId
   */
  public java.math.BigInteger getUriPatternId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not true
// Read/Write property: false
}