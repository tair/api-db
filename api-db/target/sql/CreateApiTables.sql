--
-- Copyright 2011 Carnegie Institution for Science. All rights reserved.
--
-- Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
-- Template: SubsystemAnsiSchemaTables.vsl

-- SQL schema for api subsystem

CREATE TABLE Partner (
  partnerId VARCHAR(500),  
  name VARCHAR(500) NOT NULL,  
  logoUri VARCHAR(200),  
  termOfServiceUri VARCHAR(200),  
  CONSTRAINT PartnerPK PRIMARY KEY (partnerId)
);

CREATE TABLE SubscriptionTerm (
  partnerId VARCHAR(500),  
  period INTEGER(8) NOT NULL,  
  price NUMERIC(6, 2) NOT NULL,  
  groupDiscountPercentage NUMERIC(6, 2) NOT NULL,  
  description VARCHAR(200) NOT NULL,  
  CONSTRAINT SubscriptionTermPK PRIMARY KEY (partnerId, period)
);

CREATE TABLE PartnerPattern (
  partnerId VARCHAR(500),  
  sourceUri VARCHAR(200) NOT NULL,  
  targetUri VARCHAR(200) NOT NULL,  
  CONSTRAINT PartnerPatternPK PRIMARY KEY (partnerId, sourceUri)
);

CREATE TABLE SubscriptionDescription (
  partnerId VARCHAR(500),  
  descriptionType VARCHAR(200) NOT NULL,  
  header VARCHAR(200) NOT NULL,  
  CONSTRAINT SubscriptionDescriptionPK PRIMARY KEY (descriptionType, partnerId)
);

CREATE TABLE SubscriptionDescriptionItem (
  descriptionType VARCHAR(200) NOT NULL,  
  partnerId VARCHAR(500),  
  itemNo INTEGER,  
  text VARCHAR(2048) NOT NULL,  
  CONSTRAINT SubscriptionDescriptionItemPK PRIMARY KEY (descriptionType, itemNo, partnerId)
);

CREATE TABLE ApiKey (
  apiKeyId INTEGER NOT NULL, -- generated by sequence  
  apiKey VARCHAR(200) NOT NULL,  
  CONSTRAINT ApiKeyPK PRIMARY KEY (apiKeyId)
);

CREATE TABLE Login (
  partyId INTEGER NOT NULL,  
  username VARCHAR(200) NOT NULL,  
  password VARCHAR(100) NOT NULL,  
  email VARCHAR(200),  
  institution VARCHAR(100),  
  userIdentifier VARCHAR(100),  
  partnerId VARCHAR(500) NOT NULL,  
  CONSTRAINT LoginPK PRIMARY KEY (partyId, username)
);

CREATE TABLE AccessType (
  accessTypeId INTEGER NOT NULL, -- generated by sequence  
  name VARCHAR(200) NOT NULL,  
  CONSTRAINT AccessTypePK PRIMARY KEY (accessTypeId)
);

CREATE TABLE UriPattern (
  uriPatternId INTEGER NOT NULL, -- generated by sequence  
  pattern VARCHAR(200) NOT NULL,  
  CONSTRAINT UriPatternPK PRIMARY KEY (uriPatternId)
);

CREATE TABLE AccessRule (
  accessTypeId INTEGER NOT NULL,  
  uriPatternId INTEGER NOT NULL,  
  partnerId VARCHAR(500),  
  CONSTRAINT AccessRulePK PRIMARY KEY (accessTypeId, partnerId, uriPatternId)
);

CREATE TABLE PageView (
  pageViewId INTEGER NOT NULL, -- generated by sequence  
  pageViewDate TIMESTAMP NOT NULL,  
  uri VARCHAR(250) NOT NULL,  
  ip VARCHAR(200) NOT NULL,  
  sessionId VARCHAR(250) NOT NULL,  
  partyId INTEGER,  
  CONSTRAINT PageViewPK PRIMARY KEY (pageViewId)
);

CREATE TABLE IpCount (
  partnerId VARCHAR(500),  
  ip VARCHAR(200) NOT NULL,  
  count INTEGER NOT NULL,  
  CONSTRAINT IpCountPK PRIMARY KEY (ip, partnerId)
);

CREATE TABLE LimitValue (
  partnerId VARCHAR(500),  
  value INTEGER NOT NULL,  
  CONSTRAINT LimitValuePK PRIMARY KEY (partnerId, value)
);

CREATE TABLE Party (
  partyId INTEGER NOT NULL, -- generated by sequence  
  name VARCHAR(200) NOT NULL,  
  partyType VARCHAR(200) NOT NULL,  
  display BOOLEAN NOT NULL,  
  countryId INTEGER,  
  CONSTRAINT PartyPK PRIMARY KEY (partyId)
);

CREATE TABLE Country (
  countryId INTEGER NOT NULL, -- generated by sequence  
  name VARCHAR(200) NOT NULL,  
  CONSTRAINT CountryPK PRIMARY KEY (countryId)
);

CREATE TABLE IpRange (
  partyId INTEGER NOT NULL,  
  startIp VARCHAR(200) NOT NULL,  
  endIp VARCHAR(200) NOT NULL,  
  CONSTRAINT IpRangePK PRIMARY KEY (partyId, startIp)
);

CREATE TABLE ActivationCode (
  activationCodeId VARCHAR(50) NOT NULL,  
  period INTEGER(8) NOT NULL,  
  purchaseDate TIMESTAMP NOT NULL,  
  partnerId VARCHAR(500) NOT NULL,  
  CONSTRAINT ActivationCodePK PRIMARY KEY (activationCodeId)
);

CREATE TABLE SubscriptionTransaction (
  partnerId VARCHAR(500),  
  partyId INTEGER NOT NULL,  
  transactionNo INTEGER,  
  transactionDate TIMESTAMP NOT NULL,  
  startDate TIMESTAMP NOT NULL,  
  endDate TIMESTAMP NOT NULL,  
  transactionType VARCHAR(50) NOT NULL,  
  activationCodeId VARCHAR(50),  
  CONSTRAINT SubscriptionTransactionPK PRIMARY KEY (partnerId, partyId, transactionNo)
);

CREATE TABLE Subscription (
  partnerId VARCHAR(500),  
  partyId INTEGER NOT NULL,  
  startDate TIMESTAMP NOT NULL,  
  endDate TIMESTAMP NOT NULL,  
  subscriptionId ${col.sqlTypeAnsi} NOT NULL,  
  CONSTRAINT SubscriptionPK PRIMARY KEY (partnerId, partyId)
);

