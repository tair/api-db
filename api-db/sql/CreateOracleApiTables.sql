--
-- Copyright 2015 Phoenix Bioinformatics Corporation. All rights reserved.
--
-- Oracle SQL schema for api subsystem
--
-- Revised from generated version to revise types, foreign key constraints

-- Sequences for id generation

CREATE SEQUENCE Country_SEQ NOCACHE;
CREATE SEQUENCE ApiKey_SEQ NOCACHE;
CREATE SEQUENCE Party_SEQ NOCACHE;
CREATE SEQUENCE AccessType_SEQ NOCACHE;
CREATE SEQUENCE UriPattern_SEQ NOCACHE;
CREATE SEQUENCE PageView_SEQ NOCACHE;
CREATE SEQUENCE Subscription_SEQ NOCACHE;

CREATE TABLE Country (
  countryId NUMBER(38) NOT NULL, -- generated by sequence  
  name VARCHAR2(200) NOT NULL,  
  CONSTRAINT CountryPK PRIMARY KEY (countryId)
);

CREATE TABLE Partner (
  partnerId VARCHAR2(500) NOT NULL, -- generated by sequence  
  name VARCHAR2(500) NOT NULL,  
  logoUri VARCHAR2(200),  
  termOfServiceUri VARCHAR2(200),  
  CONSTRAINT PartnerPK PRIMARY KEY (partnerId)
);

INSERT INTO Partner (partnerId, name, logoUri, termOfServiceUri)
VALUES ('tair', 'TAIR', 'https://www.arabidopsis.org/i/logo2.gif', 'https://www.arabidopsis.org/doc/about/tair_terms_of_use/417');

CREATE TABLE SubscriptionTerm (
  partnerId VARCHAR2(500) NOT NULL,  
  period VARCHAR2(200) NOT NULL,  
  price NUMBER(6, 2) NOT NULL,  
  groupDiscountPercentage NUMBER(6, 2) NOT NULL,  
  description VARCHAR2(200) NOT NULL,  
  CONSTRAINT SubscriptionTermPK PRIMARY KEY (partnerId, period)
);

ALTER TABLE SubscriptionTerm ADD CONSTRAINT SbTPr_FK 
FOREIGN KEY (partnerId) REFERENCES Partner(partnerId) ON DELETE CASCADE;

CREATE TABLE PartnerPattern (
  partnerId VARCHAR2(500) NOT NULL,  
  sourceUri VARCHAR2(200) NOT NULL,  
  targetUri VARCHAR2(200) NOT NULL,  
  CONSTRAINT PartnerPatternPK PRIMARY KEY (partnerId, sourceUri)
);

ALTER TABLE PartnerPattern ADD CONSTRAINT PrP_Pr_FK 
FOREIGN KEY (partnerId) REFERENCES Partner(partnerId) ON DELETE CASCADE;

CREATE TABLE SubscriptionDescription (
  partnerId VARCHAR2(500),  
  descriptionType VARCHAR2(200) NOT NULL,  
  header VARCHAR2(200) NOT NULL,  
  CONSTRAINT SubscriptionDescriptionPK PRIMARY KEY (partnerId, descriptionType)
);

ALTER TABLE SubscriptionDescription ADD CONSTRAINT SbD_Pr_FK 
FOREIGN KEY (partnerId) REFERENCES Partner(partnerId) ON DELETE CASCADE;

CREATE TABLE SubscriptionDescriptionItem (
  partnerId VARCHAR2(500),  
  descriptionType VARCHAR2(200) NOT NULL,  
  itemNo NUMBER(38),  
  text VARCHAR2(2048) NOT NULL,  
  CONSTRAINT SubscriptionDescriptionItemPK PRIMARY KEY (partnerId, descriptionType, itemNo)
);

ALTER TABLE SubscriptionDescriptionItem ADD CONSTRAINT SbDI_SbD_FK 
FOREIGN KEY (partnerId, descriptionType) REFERENCES SubscriptionDescription(partnerId, descriptionType) ON DELETE CASCADE;

CREATE TABLE IpCount (
  partnerId VARCHAR2(500) NOT NULL,  
  ip VARCHAR2(200) NOT NULL,  
  count NUMBER(12) NOT NULL,  
  CONSTRAINT IpCountPK PRIMARY KEY (ip, partnerId)
);

ALTER TABLE IpCount ADD CONSTRAINT IpC_Pr_FK 
FOREIGN KEY (partnerId) REFERENCES Partner(partnerId) ON DELETE CASCADE;

CREATE TABLE LimitValue (
  partnerId VARCHAR2(500) NOT NULL,  
  value NUMBER(12) NOT NULL,  
  CONSTRAINT LimitValuePK PRIMARY KEY (partnerId, value)
);

ALTER TABLE LimitValue ADD CONSTRAINT LmV_Pr_FK 
FOREIGN KEY (partnerId) REFERENCES Partner(partnerId) ON DELETE CASCADE;

CREATE TABLE ApiKey (
  apiKeyId NUMBER(38) NOT NULL, -- generated by sequence  
  apiKey VARCHAR2(200) NOT NULL,  
  CONSTRAINT ApiKeyPK PRIMARY KEY (apiKeyId)
);

CREATE TABLE Party (
  partyId NUMBER(38) NOT NULL, -- generated by sequence  
  name VARCHAR2(200) NOT NULL,  
  partyType VARCHAR2(200) NOT NULL,  
  display NUMBER(1) DEFAULT 1 NOT NULL,  
  countryId NUMBER(38),  
  CONSTRAINT PartyPK PRIMARY KEY (partyId)
);

-- Create a party for Phoenix, primarily to use in testing
INSERT INTO Party (partyId, name, partyType) 
VALUES (Party_SEQ.nextval, 'Phoenix Bioinformatics Corporation', 'User');

CREATE TABLE Login (
  partyId NUMBER(38) NOT NULL,  
  username VARCHAR2(200) NOT NULL,  
  password VARCHAR2(100) NOT NULL,  
  email VARCHAR2(200),  
  institution VARCHAR2(100),  
  userIdentifier VARCHAR2(100),  
  partnerId VARCHAR2(500) NOT NULL,  
  CONSTRAINT LoginPK PRIMARY KEY (partyId, username)
);

ALTER TABLE Login ADD CONSTRAINT Login_FK 
FOREIGN KEY (partnerId) REFERENCES Partner(partnerId) ON DELETE CASCADE;
ALTER TABLE Login ADD CONSTRAINT Login_Party_PK_FK 
FOREIGN KEY (partyId) REFERENCES Party(partyId) ON DELETE CASCADE;

ALTER TABLE Login ADD CONSTRAINT Login_Partner_Name_UQ UNIQUE (username, partnerId); 

CREATE TABLE AccessType (
  accessTypeId NUMBER(38) NOT NULL, -- generated by sequence  
  name VARCHAR2(200) NOT NULL,  
  CONSTRAINT AccessTypePK PRIMARY KEY (accessTypeId)
);

CREATE TABLE UriPattern (
  uriPatternId NUMBER(38) NOT NULL, -- generated by sequence  
  pattern VARCHAR2(200) NOT NULL,  
  CONSTRAINT UriPatternPK PRIMARY KEY (uriPatternId)
);

CREATE TABLE AccessRule (
  accessTypeId NUMBER(38) NOT NULL,  
  uriPatternId NUMBER(38) NOT NULL,  
  partnerId VARCHAR2(500) NOT NULL,  
  CONSTRAINT AccessRulePK PRIMARY KEY (accessTypeId, partnerId, uriPatternId)
);

ALTER TABLE AccessRule ADD CONSTRAINT AcR_Pr_FK 
FOREIGN KEY (partnerId) REFERENCES Partner(partnerId) ON DELETE CASCADE;
ALTER TABLE AccessRule ADD CONSTRAINT AcR_Pt_FK 
FOREIGN KEY (uriPatternId) REFERENCES UriPattern(uriPatternId) ON DELETE CASCADE;
ALTER TABLE AccessRule ADD CONSTRAINT AcR_AcT_FK 
FOREIGN KEY (accessTypeId) REFERENCES AccessType(accessTypeId) ON DELETE CASCADE;

CREATE TABLE PageView (
  pageViewId NUMBER(38) NOT NULL, -- generated by sequence  
  pageViewDate TIMESTAMP WITH TIME ZONE NOT NULL,  
  uri VARCHAR2(250) NOT NULL,  
  ip VARCHAR2(200) NOT NULL,  
  sessionId VARCHAR2(250) NOT NULL,  
  partyId NUMBER(38),  
  CONSTRAINT PageViewPK PRIMARY KEY (pageViewId)
);

ALTER TABLE PageView ADD CONSTRAINT PgV_Pr_FK FOREIGN KEY (partyId) REFERENCES Party(partyId);

CREATE TABLE IpRange (
  partyId NUMBER(38) NOT NULL,  
  startIp VARCHAR2(200) NOT NULL,  
  endIp VARCHAR2(200) NOT NULL,  
  CONSTRAINT IpRangePK PRIMARY KEY (partyId, startIp)
);

ALTER TABLE IpRange ADD CONSTRAINT IpR_Pr_FK 
FOREIGN KEY (partyId) REFERENCES Party(partyId) ON DELETE CASCADE;

CREATE TABLE ActivationCode (
  activationCodeId VARCHAR2(50) NOT NULL,  
  period NUMBER(12) NOT NULL,  
  purchaseDate TIMESTAMP WITH TIME ZONE NOT NULL,  
  partnerId VARCHAR2(500) NOT NULL,  
  CONSTRAINT ActivationCodePK PRIMARY KEY (activationCodeId)
);

ALTER TABLE ActivationCode ADD CONSTRAINT AcC_Pr_FK FOREIGN KEY (partnerId) REFERENCES Partner(partnerId);

CREATE TABLE Subscription (
  partnerId VARCHAR2(500) NOT NULL,  
  partyId NUMBER(38) NOT NULL,  
  startDate TIMESTAMP WITH TIME ZONE NOT NULL,  
  endDate TIMESTAMP WITH TIME ZONE NOT NULL,  
  subscriptionId NUMBER(38) NOT NULL,  -- generated by sequence
  CONSTRAINT SubscriptionPK PRIMARY KEY (partnerId, partyId)
);

CREATE TABLE SubscriptionTransaction (
  partnerId VARCHAR2(500) NOT NULL,  
  partyId NUMBER(38) NOT NULL,  
  transactionNo NUMBER(38),  
  transactionDate TIMESTAMP WITH TIME ZONE NOT NULL,  
  startDate TIMESTAMP WITH TIME ZONE NOT NULL,  
  endDate TIMESTAMP WITH TIME ZONE NOT NULL,  
  transactionType VARCHAR2(50) NOT NULL,  
  activationCodeId VARCHAR2(50),  -- UUID
  CONSTRAINT SubscriptionTransactionPK PRIMARY KEY (partnerId, partyId, transactionNo)
);

ALTER TABLE SubscriptionTransaction ADD CONSTRAINT SbT_AcC_FK 
FOREIGN KEY (activationCodeId) REFERENCES ActivationCode(activationCodeId) ON DELETE CASCADE;
ALTER TABLE SubscriptionTransaction ADD CONSTRAINT SbT_Sb_FK 
FOREIGN KEY (partnerId, partyId) REFERENCES Subscription(partnerId, partyId) ON DELETE CASCADE;
