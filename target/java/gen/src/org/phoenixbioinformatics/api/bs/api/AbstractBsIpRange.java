/**
 * Copyright 2011 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package org.phoenixbioinformatics.api.bs.api;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import org.phoenixbioinformatics.api.db.api.IIpRange;
import org.phoenixbioinformatics.api.db.api.IpRangeProxy;
import org.phoenixbioinformatics.api.db.api.IpRange;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the IpRange. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * A range of IP addresses for a subscription; ranges must not overlap for a
 * subscription, they must be mutually exclusive
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>CompositeKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsIpRange 
    extends AbstractDto<org.phoenixbioinformatics.api.db.api.IIpRange> {

  /**
   * Create a BsIpRange object from a IpRange object.
   * 
   * @param dto the data-access layer IpRange DTO
   * @throws DelegateException when there is a problem creating the IpRange
   */
  public AbstractBsIpRange(IIpRange dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a IpRange from new data.
   *
   * @param key the primary key of the IpRange
   * @param partyId composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * @param start the IP address that is the first address in the range; must not be part of any
other range for the subscription
   * @param end the IP address that is the last address in the range; must be greater than the
start and must be a "reasonable" end to the range (TBD)
   */
  public AbstractBsIpRange(IPrimaryKey key, java.math.BigInteger partyId, java.lang.String start, java.lang.String end) {
    super(new IpRangeProxy(new IpRange(key, partyId, start, end)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<IIpRange> other = (IDto<IIpRange>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<IIpRange> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * Composite super-key attribute that uniquely identifies child combined with child sub-key and any other parent super-keys
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddParentKeyAttributes as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object IpRange</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger partyId
   */
  public java.math.BigInteger getPartyId() {
    return dto.getPartyId();
  }

  /**
   * <p>
   * the IP address that is the first address in the range; must not be part of any
   * other range for the subscription
   * </p>
   * <p>
   * Added by AddExplicitSubKeyProperties + addNaturalSubkeyOnClass as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object IpRange</li>
   * </ul>
   * </p>
   * @return a java.lang.String start
   */
  public java.lang.String getStart() {
    return dto.getStart();
  }

  /**
   * <p>
   * the IP address that is the last address in the range; must be greater than the
   * start and must be a "reasonable" end to the range (TBD)
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object IpRange</li>
   * </ul>
   * </p>
   * @return a java.lang.String end
   */
  public java.lang.String getEnd() {
    return dto.getEnd();
  }

  /**
   * <p>
   * Set the end.
   * </p>
   * <p>
   * the IP address that is the last address in the range; must be greater than the
   * start and must be a "reasonable" end to the range (TBD)
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object IpRange</li>
   * </ul>
   * </p>
   * @param end the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter end is null
   */
  public void setEnd(java.lang.String end) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setEnd(end);
  }

  /**
   * <p>
   * the party that is associated with the IP range
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object IpRange</li>
   * </ul>
   * </p>
   * @return a org.phoenixbioinformatics.api.bs.api.BsParty party
   */
  public org.phoenixbioinformatics.api.bs.api.BsParty getParty() {
    // Return 4
    return new org.phoenixbioinformatics.api.bs.api.BsParty(dto.getParty());
  }

  /**
   * <p>
   * Set the party.
   * </p>
   * <p>
   * the party that is associated with the IP range
   * </p>
   * <p>
   * Added by AddToOneAssociationRequiredObjectProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object IpRange</li>
   * </ul>
   * </p>
   * @param party the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter party is null
   */
  public void setParty(org.phoenixbioinformatics.api.bs.api.BsParty party) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setParty(party == null ? null : party.toDto());
  }
}