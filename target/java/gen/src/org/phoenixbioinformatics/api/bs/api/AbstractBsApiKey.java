/**
 * Copyright 2011 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package org.phoenixbioinformatics.api.bs.api;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import org.phoenixbioinformatics.api.db.api.IApiKey;
import org.phoenixbioinformatics.api.db.api.ApiKeyProxy;
import org.phoenixbioinformatics.api.db.api.ApiKey;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the ApiKey. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * Provides a set of API keys for use in authenticating callers of the API; only
 * authenticated callers may call the API
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>Persistent</li>
 *     <li>SequenceKey</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsApiKey 
    extends AbstractDto<org.phoenixbioinformatics.api.db.api.IApiKey> {

  /**
   * Create a BsApiKey object from a ApiKey object.
   * 
   * @param dto the data-access layer ApiKey DTO
   * @throws DelegateException when there is a problem creating the ApiKey
   */
  public AbstractBsApiKey(IApiKey dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a ApiKey from new data.
   *
   * @param key the primary key of the ApiKey
   * @param apiKeyId primary key attribute
   * @param apiKey the API key token
   */
  public AbstractBsApiKey(IPrimaryKey key, java.math.BigInteger apiKeyId, java.lang.String apiKey) {
    super(new ApiKeyProxy(new ApiKey(key, apiKeyId, apiKey)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<IApiKey> other = (IDto<IApiKey>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<IApiKey> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * Primary key attribute
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object ApiKey</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger apiKeyId
   */
  public java.math.BigInteger getApiKeyId() {
    return dto.getApiKeyId();
  }

  /**
   * <p>
   * the API key token
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object ApiKey</li>
   * </ul>
   * </p>
   * @return a java.lang.String apiKey
   */
  public java.lang.String getApiKey() {
    return dto.getApiKey();
  }

  /**
   * <p>
   * Set the apiKey.
   * </p>
   * <p>
   * the API key token
   * </p>
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object ApiKey</li>
   * </ul>
   * </p>
   * @param apiKey the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   * @throws com.poesys.db.InvalidParametersException when the property is
   *                 required but the input parameter apiKey is null
   */
  public void setApiKey(java.lang.String apiKey) 
      throws com.poesys.db.dto.DtoStatusException , com.poesys.db.InvalidParametersException {
    dto.setApiKey(apiKey);
  }
}