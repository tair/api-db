/**
 * Copyright 2011 Carnegie Institution for Science. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractDbDtoProxy.vsl

package org.phoenixbioinformatics.api.db.api;


import com.poesys.db.dto.AbstractLazyLoadingDtoProxy;


/**
 * <p>
 * A data-access layer data-transfer object (DTO) lazy-loading proxy for the 
 * ActivationCode. This class is an abstract class that contains AndroMDA 
 * generated code; change nothing in this class. Instead, override any methods 
 * in the concrete subclass generated in the same package. AndroMDA will 
 * overwrite this class each time you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * A code that a subscriber can use to activate their subscription to a partner;
 * the code is the key for the class
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractActivationCodeProxy extends AbstractLazyLoadingDtoProxy implements IActivationCode {
  /** Default serial version UID for the Serializable DTO */
  private static final long serialVersionUID = 1L;

  // Lazy-loading query setter strategy nested classes for single-object associations
  
  /**
   * Create a ActivationCodeProxy. The concrete subclass must call this constructor.
   *
   * @param dto the DTO to proxy
   */
  public AbstractActivationCodeProxy(ActivationCode dto) {
    super(dto);

    // Setter arrays
    readObjectSetters = new java.util.concurrent.CopyOnWriteArrayList<com.poesys.db.dto.ISet>();
  }

  @Override
  public boolean equals(Object obj) {
    AbstractActivationCodeProxy otherProxy = (AbstractActivationCodeProxy)obj;
    return ((ActivationCode)dto).equals(otherProxy.dto);
  }

  @Override
  public int hashCode() {
    return ((ActivationCode)dto).hashCode();
  }

  // Local properties (attributes, associations, and association classes)

  /**
   * Get an object of java.util.UUID
   *
   * Source: AddGeneratedGuidKeyProperties
   * Lazy: false
   * 
   * @return a java.util.UUID
   */
  public java.util.UUID getActivationCodeId() {
    return ((ActivationCode)dto).getActivationCodeId();
  }

  /**
   * Get an object of java.lang.Integer
   *
   * Source: AddLocalAttributeProperties
   * Lazy: false
   * 
   * @return a java.lang.Integer
   */
  public java.lang.Integer getPeriod() {
    return ((ActivationCode)dto).getPeriod();
  }

  public void setPeriod(java.lang.Integer period)
      throws com.poesys.db.InvalidParametersException {
    ((ActivationCode)dto).setPeriod(period);
  }

  /**
   * Get an object of java.sql.Timestamp
   *
   * Source: AddLocalAttributeProperties
   * Lazy: false
   * 
   * @return a java.sql.Timestamp
   */
  public java.sql.Timestamp getPurchaseDate() {
    return ((ActivationCode)dto).getPurchaseDate();
  }

  public void setPurchaseDate(java.sql.Timestamp purchaseDate)
      throws com.poesys.db.InvalidParametersException {
    ((ActivationCode)dto).setPurchaseDate(purchaseDate);
  }

  /**
   * Get an object of org.phoenixbioinformatics.api.db.api.IPartner
   *
   * Source: AddToOneAssociationRequiredObjectProperties
   * Lazy: false
   * 
   * @return a org.phoenixbioinformatics.api.db.api.IPartner
   */
  public org.phoenixbioinformatics.api.db.api.IPartner getPartner() {
    return ((ActivationCode)dto).getPartner();
  }

  public void setPartner(org.phoenixbioinformatics.api.db.api.IPartner partner)
      throws com.poesys.db.InvalidParametersException {
    ((ActivationCode)dto).setPartner(partner);
  }

  /**
   * Get an object of java.math.BigInteger
   *
   * Source: AddGeneratedKeyProperties + AddToOneAssociationAttributeProperties
   * Lazy: false
   * 
   * @return a java.math.BigInteger
   */
  public java.math.BigInteger getPartnerId() {
    return ((ActivationCode)dto).getPartnerId();
  }

  public void markChildrenDeleted() throws com.poesys.db.dto.DtoStatusException {
  	((ActivationCode)dto).markChildrenDeleted();
  }
}